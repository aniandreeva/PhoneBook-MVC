@model PhoneBook.ViewModels.Groups.GroupsListVM

@{
    ViewBag.Title = "List";
}

<h2>@ViewBag.Title</h2>
<h4>@PhoneBook.Services.AuthenticationService.LoggedUser.FirstName @PhoneBook.Services.AuthenticationService.LoggedUser.LastName</h4>

<p>
    @(Html.ActionLink<GroupsController>("Create New", g => g.Edit()))
</p>

@using (Html.BeginForm<GroupsController>(g => g.List(), FormMethod.Get))
{
    <div>
        Find by name... @Html.TextBoxFor(model => model.Search, new { @class = "form-control" })
        <input type="submit" value="Search" class="btn btn-primary" />
    </div>
}

@if (Model.Groups.Count == 0)
{
    <div class="alert alert-info">No Groups Found</div>
}
else
{
    <table class="table">
        <tr>
            <th>@(Html.ActionLink<GroupsController>("Name", g => g.List(), new { SortOrder = Model.SortOrder == "name_asc" ? "name_desc" : "name_asc", Search = Model.Search }, null))</th>
            <th></th>
            <th></th>
        </tr>

        @foreach (var group in Model.Groups)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => group.Key.Name)
                </td>
                <td>
                    @(Html.ActionLink<GroupsController>("Edit", g => g.Edit(), new { id = group.Key.ID })) |
                    <a class="showContacts" href="#">Show Contacts</a> |
                    <a href="#" data-toggle="modal" data-target="#modal-delete-confirmation" data-url="/Groups/Delete/@group.Key.ID" data-additionalinfo="@group.Key.Name">Delete</a>
                </td>
                <td style="display:none">
                    <table class="table" id="contactsTable">
                        <thead>
                            <tr>
                                <th>First Name</th>
                                <th>Last Name</th>
                                <th>
                                    <select class="select-contacts" name="character" multiple="multiple" data-groupId="@group.Key.ID">
                                        @foreach (var contact in group.Value)
                                        {
                                            <option class="update-groups" value="@contact.Value" data-contactId="@contact.Value" @Html.Raw(contact.Selected ? "selected" : String.Empty)>@contact.Text</option>
                                        }
                                    </select>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var contact in group.Key.Contacts)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(modelItem => contact.FirstName)</td>
                                    <td>@Html.DisplayFor(modelItem => contact.LastName)</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </td>
            </tr>
        }
    </table>

    <br />
}

@section scripts{
    @Html.Partial("~/Views/Shared/PartialViews/_DeleteConfirmation.cshtml")

    <script>
        $(document).ready(function () {
            $(function () {
                $('.select-contacts').searchableOptionList();
            });

            $('.showContacts').click(function () {
                $(this).parent().next().fadeToggle();
                if ($(this).text() == "Show Contacts") {
                    $(this).text("Hide Contacts");
                }
                else {
                    $(this).text("Show Contacts");
                }
            });
            function removeFromGroup() {
                $('.remove-contact').click(function () {
                    var contact = $(this).parent().parent();
                    var contactId = $(this).attr('data-contactId');
                    var groupId = $(this).attr('data-groupId');

                    var thead = $(this).parent().parent().parent().prev();

                    $.ajax({
                        type: "Post",
                        url: '@Url.Action("Remove")',
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify({ contactId: contactId, groupId: groupId }),
                        dataType: "json",
                        success: function () {
                            contact.remove();
                            $(thead).find('.sol-checkbox[value=' + contactId + ']').prop("checked", false);
                        },
                        error: function () { alert('Something went wrong... !'); }
                    });
                });
            }

            $('.select-contacts').change(function () {
                var selectedContacts = $(this).val();
                var groupId = $(this).attr('data-groupId');

                var tbody = $(this).parent().parent().parent().next();

                $.ajax({
                    type: "Post",
                    url: '@Url.Action("Add")',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify({ contactsIds: selectedContacts, groupId: groupId }),
                    dataType: "json",
                    success: function (contacts) {
                        var input = "";
                        tbody.empty();

                        $.each(contacts, function (key, value) {
                            input += "<tr>";
                            input += "<td>" + value.firstName + "</td>";
                            input += "<td>" + value.lastName + "</td>";
                            input += "</tr>";
                        });

                        tbody.append(input);

                        removeFromGroup();
                    },
                    error: function (result) { alert(result.responseText); }
                });
            });
        });

    </script>
}